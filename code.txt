---------------------------------------------------------------
# Creating EKS Cluster
$ eksctl create cluster --name mycluster1 --region=us-east-1 
$ eksctl get cluster --name mycluster1 --region=us-east-1
$ $ kubectl get nodes

--------------------------------------------------------------
# Creating and launching Kubectl 
$ kubectl create -f https://raw.githubusercontent.com/operator-framework/operator-lifecycle-manager/master/deploy/upstream/quickstart/crds.yaml
$ kubectl create -fhttps://raw.githubusercontent.com/operator-framework/operator-lifecycle-manager/master/deploy/upstream/quickstart/olm.yaml

--------------------------------------------------------------

$ kubectl create namespace lwns $ ./helm.exe repo add jenkins https://raw.githubusercontent.com/jenkinsci/kubernetes-operator/master/chart

----------------------------------------------------------------

$ ./helm.exe install my-jenkins-operator jenkins/jenkins-operator -n lwns --set jenkins.enabled=false

---------------------------------------------------------------

$ kubectl --namespace lwns get pods -w
$ Vim jenkins_instance.yaml
$ kubectl create -f jenkins_instance.yaml
$ kubectl --namespace lwns get pods -w

-------------------------------------------------------------

$ kubectl --namespace lwns get secret jenkins-operator-credentials-example -o 'jsonpath={.data.user}' | base64 -d 
$ kubectl --namespace lwns get secret jenkins-operator-credentials-example -o 'jsonpath={.data.password}' | base64 -d

-------------------------------------------------------------

$ kubectl --namespace lwns port-forward jenkins-example 8080:8080
$ ./helm.exe repo add grafana https://grafana.github.io/helm-charts
$ ./helm.exe repo update

--------------------------------------------------------------

$ ./helm.exe upgrade --install loki grafana/loki-stack --set grafana.enabled=true,prometheus.enabled=true,prometheus.alertmanager.persistentVolume.enabled=false,prometheus.server.persistentVolume.enabled=false
$ kubectl patch svc loki-grafana -p '{"spec": {"type": "LoadBalancer"}}'
$ kubectl get svc loki-grafana -o jsonpath='{.status.loadBalancer.ingress[0].hostname}'

--------------------------------------------------------------

$ kubectl get secret loki-grafana -o go-template='{{range $k,$v := .data}}{{printf "%s: " $k}}{{if not $v}}{{$v}}{{else}}{{$v | base64decode}}{{end}}{{"\n"}}{{end}}'

--------------------------------------------------------------

Clean up:
$ helm delete loki
$ kubectl delete deploy loki-medium-logs

----------------------------------------------------------------
